{"version":3,"sources":["App.js","index.js"],"names":["Box","props","red","redPoint","row","col","green","sneakPoint","filter","item","length","className","App","useState","setRedPoint","dir","setDir","setSneakPoint","changeDirection","useCallback","e","keyCode","useEffect","window","addEventListener","removeEventListener","time","setTimeout","slice","headRow","headCol","alert","Math","floor","random","tmp","pop","clearInterval","Array","fill","map","indexRow","key","indexCol","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAGMA,G,MAAM,SAACC,GACX,IAAMC,EAAMD,EAAME,SAAS,KAAOF,EAAMG,KAAOH,EAAME,SAAS,KAAOF,EAAMI,IACrEC,EAAmG,IAA3FL,EAAMM,WAAWC,QAAO,SAAAC,GAAI,OAAIA,EAAK,KAAOR,EAAMG,KAAOK,EAAK,KAAOR,EAAMI,OAAKK,OAC9F,OACE,yBACEC,UAAS,cAAST,EAAK,MAAQI,EAAO,QAAU,QAIvC,SAASM,IAAO,IAAD,EACIC,mBAAS,CAAC,GAAG,KADjB,mBACrBV,EADqB,KACXW,EADW,OAEND,mBAAS,SAFH,mBAErBE,EAFqB,KAEhBC,EAFgB,OAGQH,mBAAS,CAAC,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,MAHrD,mBAGrBN,EAHqB,KAGTU,EAHS,KAKtBC,EAAkBC,uBAAY,SAAAC,GAClC,OAAQA,EAAEC,SACN,KAAK,GAEDL,EADU,UAARD,EACK,OAEA,SAGT,MACF,KAAK,GAEDC,EADU,SAARD,EACK,KAEA,QAGT,MACF,KAAK,GAEHC,EADU,SAARD,EACK,QAEA,QAGP,MACF,KAAK,GAEDC,EADU,OAARD,EACK,OAEA,SAOZ,CAACA,IAmDN,OAjDAO,qBAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWN,GAC5B,WACLK,OAAOE,oBAAoB,UAAWP,MAExC,CAACA,IAEHI,qBAAU,WACR,IAAMI,EAAOH,OAAOI,YAAW,WAAO,IAAD,EACVpB,EAAW,GAAGqB,QADJ,mBAC9BC,EAD8B,KACrBC,EADqB,KAEnC,OAAQf,GACN,IAAK,OACHe,EAAsB,IAAZA,EAAgB,GAAKA,EAAU,EACzC,MACF,IAAK,KACHD,EAAsB,IAAZA,EAAgB,GAAKA,EAAU,EACzC,MACF,IAAK,QACHC,EAAsB,KAAZA,EAAiB,EAAIA,EAAU,EACzC,MACF,IAAK,OACHD,EAAsB,KAAZA,EAAiB,EAAIA,EAAU,EAM7C,GAAqF,IAAjFtB,EAAWC,QAAO,SAAAC,GAAI,OAAIA,EAAK,KAAOoB,GAAWpB,EAAK,KAAOqB,KAASpB,OAKxE,OAJAqB,MAAM,+BACNd,EAAc,CAAC,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,MAClDD,EAAO,cACPF,EAAY,CAAC,GAAG,KAIlB,GAAIe,IAAY1B,EAAS,IAAM2B,IAAY3B,EAAS,GAClDW,EAAY,CAACkB,KAAKC,MAAsB,GAAhBD,KAAKE,UAAgBF,KAAKC,MAAsB,GAAhBD,KAAKE,YAC7DjB,EAAc,CAAC,CAACY,EAASC,IAAZ,mBAAyBvB,SACjC,CACL,IAAM4B,EAAM5B,EAAWqB,QACvBO,EAAIC,MACJnB,EAAc,CAAC,CAACY,EAASC,IAAZ,mBAAyBK,QAEvC,IACH,OAAO,WACLZ,OAAOc,cAAcX,MAEtB,CAACnB,EAAYQ,EAAKZ,IAGnB,yBAAKQ,UAAU,aACZ,IAAI2B,MAAM,IAAIC,KAAK,IAAID,MAAM,IAAIC,KAAK,IAAIC,KAAI,SAACpC,EAAKqC,GACnD,OACE,yBAAK9B,UAAU,WAAW+B,IAAK,MAAQD,GACpCrC,EAAIoC,KAAI,SAACnC,EAAKsC,GACb,OAAQ,kBAAC,EAAD,CAAKtC,IAAKsC,EAAUvC,IAAKqC,EAAUlC,WAAYA,EAAYJ,SAAUA,EAAUuC,IAAKC,EAAWF,YC1GrHG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAClC,EAAD,OAEFmC,SAASC,eAAe,U","file":"static/js/main.b98d8f4e.chunk.js","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\nimport './style.css';\n\nconst Box = (props) => {\n  const red = props.redPoint[0] === props.row && props.redPoint[1] === props.col ? true : false;\n  const green = props.sneakPoint.filter(item => item[0] === props.row && item[1] === props.col).length === 1 ? true: false;\n  return (\n    <div\n      className={`box ${red? 'red' : green? 'green' : ''}`}>\n    </div>\n  );};\n\nexport default function App() {\n  const [redPoint, setRedPoint] = useState([21,27]);\n  const [dir, setDir] = useState('right');\n  const [sneakPoint, setSneakPoint] = useState([[15, 15], [15, 14], [15, 13], [15, 12]]);\n\n  const changeDirection = useCallback(e => {\n    switch (e.keyCode) {\n        case 37:\n          if (dir !== 'right') {\n            setDir('left');\n          } else {\n            setDir('right');\n          }\n\n          break;\n        case 38:\n          if (dir !== 'down') {\n            setDir('up');\n          } else {\n            setDir('down');\n          }\n\n          break;\n        case 39:\n        if (dir !== 'left') {\n          setDir('right');\n        } else {\n          setDir('left');\n        }\n\n          break;\n        case 40:\n          if (dir !== 'up') {\n            setDir('down');\n          } else {\n            setDir('up');\n          }\n\n          break;\n        default:\n          break;\n      }\n    }, [dir]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", changeDirection);\n    return () => {\n      window.removeEventListener(\"keydown\", changeDirection);\n    };\n  },[changeDirection]);\n\n  useEffect(() => {\n    const time = window.setTimeout(() => {\n      let [headRow, headCol] = sneakPoint[0].slice();\n      switch (dir) {\n        case 'left':\n          headCol = headCol === 0 ? 29 : headCol - 1;\n          break;\n        case 'up':\n          headRow = headRow === 0 ? 29 : headRow - 1;\n          break;\n        case 'right':\n          headCol = headCol === 29 ? 0 : headCol + 1;\n          break;\n        case 'down':\n          headRow = headRow === 29 ? 0 : headRow + 1;\n          break;\n        default:\n          break;\n      }\n\n      if (sneakPoint.filter(item => item[0] === headRow && item[1] === headCol).length !== 0) {\n        alert('Oh no!!! Want to try again?');\n        setSneakPoint([[15, 15], [15, 14], [15, 13], [15, 12]]);\n        setDir('right');\n        setRedPoint([21,27]);\n        return;\n      }\n\n      if (headRow === redPoint[0] && headCol === redPoint[1]) {\n        setRedPoint([Math.floor(Math.random() * 29), Math.floor(Math.random() * 29)]);\n        setSneakPoint([[headRow, headCol], ...sneakPoint]);\n      } else {\n        const tmp = sneakPoint.slice();\n        tmp.pop();\n        setSneakPoint([[headRow, headCol], ...tmp]);\n      }\n    }, 80);\n    return () => {\n      window.clearInterval(time);\n    };\n  }, [sneakPoint, dir, redPoint]);\n\n  return (\n    <div className=\"container\">\n      {new Array(30).fill(new Array(30).fill(1)).map((row, indexRow) => {\n        return (\n          <div className=\"flex_row\" key={'row' + indexRow}>\n            {row.map((col, indexCol) => {\n              return (<Box col={indexCol} row={indexRow} sneakPoint={sneakPoint} redPoint={redPoint} key={indexCol + indexRow}/>);\n            })}\n          </div>);\n      })}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}